#Matrix - Maximum Possible Square

#The program must accept an integer matrix of size NxN containing only 1s and 0s as the input.
#The program must find the maximum possible square containing only 1s in the matrix. 
#Then the program must print the area of the maximum possible square as the output.

Example:
Input:
5
1 1 1 1 0
1 1 1 0 0
1 1 1 0 0
1 0 1 1 1
1 1 1 0 1

Output:
9

Explanation:
The maximum possible square containing only 1s in the matrix is highlighted below.
1 1 1  1 0
1 1 1  0 0
1 1 1  0 0

1 0 1 1 1
1 1 1 0 1
The area of the maximum possible square is 9 (3*3 = 9).

def find(l):
    n=len(l)
    m=[[0 for i in range(n)] for j in range(n)]
    k=0
    for i in range(n):
        for j in range(n):
            if l[i][j]==1:
                k1=min(m[i][j-1],m[i-1][j],m[i-1][j-1])+1
                m[i][j]=k1
                if k<k1:
                    k=k1
            else:
                m[i][j]=0
    print(k*k)            
n=int(input())
l=[]
for i in range(n):
    l.append(list(map(int,input().split())))
find(l)
